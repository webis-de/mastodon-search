[project]
name = "mastodon-search"
authors = [
    { name = "Matti Wiegmann", email = "matti.wiegmann@uni-weimar.de" },
    { name = "Jan Heinrich Merker", email = "heinrich.merker@uni-jena.de" },
    { name = "Maximilian Ernst" },
    { name = "Matthias Hagen", email = "matthias.hagen@uni-jena.de" },
    { name = "Benno Stein", email = "benno.stein@uni-weimar.de" },
    { name = "Martin Potthast", email = "martin.potthast@uni-leipzig.de" },
]
description = "A Corpus for Simulating Search on Mastodon"
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
	"Programming Language :: Python :: 3 :: Only",
	"Programming Language :: Python :: 3.11",
	"Programming Language :: Python :: 3.12",
	"Intended Audience :: Science/Research",
	"Operating System :: OS Independent",
	"Topic :: Scientific/Engineering",
	"Topic :: Scientific/Engineering :: Information Analysis",
	"Environment :: Console",
]
dependencies = [
	"click~=8.1",
	"elasticsearch~=8.15",
	"elasticsearch-dsl~=8.15",
    "favicon~=0.7.0",
	"mastodon-py~=1.8",
	"notebook~=7.1",
	"numpy~=2.0",
	"pandas~=2.2",
	"requests-ratelimiter~=0.7.0",
	"scipy~=1.12",
	"seaborn~=0.13.2",
    "tqdm~=4.66",
    "urllib3~=2.2",
]
dynamic = ["version"]

[project.optional-dependencies]
tests = [
    "bandit[toml]~=1.7",
    "mypy~=1.5",
    "pandas-stubs~=2.0",
    "pytest~=8.0",
    "pytest-cov~=6.0",
    "ruff~=0.9.9",
]

[project.urls]
"Homepage" = "https://github.com/webis-de/mastodon-search"
"Bug Tracker" = "https://github.com/webis-de/mastodon-search/issues"

[project.scripts]
mastodon-search = "mastodon_search.cli:main"

[build-system]
requires = ["setuptools>=50", "setuptools_scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
namespaces = false

[tool.setuptools.package-data]
mypkg = ["*.txt", "*.md", "*.rst"]

[tool.setuptools_scm]

[tool.ruff]
exclude = [
    "build",
    "venv",
    "notebooks",
    "data",
    "helm",
]

[tool.mypy]
ignore_missing_imports = true
exclude = [
    "build",
    "venv",
    "notebooks",
    "data",
    "helm",
]

[tool.bandit]
exclude_dirs = [
    "build",
    "venv",
    "notebooks",
    "data",
    "helm",
]

[tool.bandit.assert_used]
skips = ["**/test_*.py"]

[tool.pytest.ini_options]
log_cli = "True"
